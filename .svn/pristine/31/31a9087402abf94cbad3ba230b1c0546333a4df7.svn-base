<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<!-- 背景动画 以及初始化样式 -->
		<link rel="stylesheet" type="text/css" href="../css/normalize.css" />
		<link rel="stylesheet" type="text/css" href="../css/demo.css">
		<link rel="stylesheet" type="text/css" href="../css/style.css">
		<!-- 页面样式 -->
		<link href="../css/doc_vft.css" rel="stylesheet" type="text/css" />
		<link href="../css/layoutStyle.css" rel="stylesheet" type="text/css" />
		<!-- 导入vue.js -->
		<script src="../js/vue.js"></script>
		<!-- <script src="../js/vue.min.js"></script> -->
		<!-- <script type="text/javascript" src="../js/vue.min.js"></script> -->
		<!-- 引入jQuery.js -->
		<script src="../js/jquery/jquery.min.js"></script>
		<title></title>
	</head>
	<body>
		<!-- 背景 -->
		<div class="satic-area">
			<div class="dynamic-area1"></div>
			<div class="dynamic-area2"></div>
		</div>

		<div id="content" class=" vue">

			<div class="scale scale-Title">
				<!-- 临时使用 -->
				<div id="next-scale">
					<button type="button" onclick="stopTest()">完成</button>
					<button type="button" onclick="next_scale()">下一个</button>
				</div>

				<div id="title">
					<span>量表名称：{{titleName.aiScaleName}}</span>

				</div>
				<div class="scale-left flex-layout-aligin" style="width: 70%;justify-content:flex-start;align-items: flex-start;">
					<div class="content-title">
						指导语
					</div>
					<div style="padding-bottom: 15px;padding-top: 15px;">
						<div class="little-title-content">
							&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{scaleMsg.aiQuestionGuid[status]}}
						</div>
						<div class="little-title-content">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{notice}}</div>
					</div>
					<div class="little-title s-title">
						个数统计
					</div>
					<div class="r-bu" v-for="(it,index) in testNames" v-on:click="toSelect(index)" v-bind:class="[index==testNames.length-1?'r-bu-last':'',status==index?'select-bgc':'',isFinish==0?'':'select-bgc']">
						<span class="little-title-content">{{it}}</span>
						<span class="little-title-red">正确单词数：{{trueNums[index]}}</span>
						<div>
							<span class="red-bgc r-buItem" v-on:click="deleteNum(index)">个数-1</span>
							<span class="green-bgc r-buItem" v-on:click="addNum(index)">个数+1</span>
						</div>
					</div>
					<div class="nextGroup little-title-green">
						<span v-on:click="finish()">{{isFinish == 0?'完成':''}}</span>
					</div>
				</div>
				<div class="scale-right flex-layout-aligin" style="width: 30%;">
					<div class="content-title">
						量表说明
					</div>
					<div class="little-title-content  scrollbar" style="width: 100%;height: 100%;overflow-y: overlay;">
						<div v-for="(it,index) in titleName.aiScaleOverview">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{it}}</div>
					</div>

				</div>
			</div>
		</div>
	</body>

	<script src="../js/toJump.js"></script>
	<script src="utils/Storage.js"></script>
	<script src="config/urlConfig.js"></script>
	<script>
		//const USER_ID = window.location.search.split('?')[1].split(0, 1).join("");
		const USER_ID = 222;
		let reg_1 = /&/;
		let reg_2 = /\$/;
		let reg_3 = /split;/;
		let scaleData = {
			aiScaleId: '',
			aiScaleName: '',
			aiScaleOverview: [],
			aiScaleNotice: []
		};
		let scaleMsg = {
			aiQuestionAnswerDescribe: '',
			aiQuestionContent: [
				[
					[]
				],
				[
					[]
				]
			],
			aiQuestionGuid: '',
			aiQuestionId: '',
			aiQuestionNotice: '',
			aiQuestionOption: [
				[],
				[]
			],
			aiQuestionType: '',
			aiScaleId: '',
			aiScoreMethodName: '',
		};
		/**
		 * 数据初始化
		 */
		$(document).ready(function() {
			$.ajax({
				url: config.url + '/scales/testMsg/' + 19,
				type: 'GET',
				success: function(e) {
					let m = e.object[0];
					console.log(m, 'm')
					let o = {};
					for (i in m) {
						o[i] = m[i];
						if (reg_1.test(m[i])) {
							o[i] = m[i].slice(0).split('&');
							if (reg_2.test(m[i])) {
								for (let n = 0; n < o[i].length; n++) {
									o[i][n] = o[i][n].slice(0).split('$');
									for (let j = 0; j < o[i][n].length; j++) {
										if (reg_3.test(m[i])) {
											o[i][n][j] = o[i][n][j].slice(0).split('split;');
										}
									}
								}
							}
						} else o[i] = m[i];

					}
					vue.scaleMsg = o;
					console.log(o, 'ooo')
				},
				error: function() {
					console.log('连接服务器超时');
				}
			})
		});
		let vue = new Vue({
			el: '.vue',
			data: {
				titleName: scaleData,
				status: 0,
				scaleMsg: scaleMsg,
				trueNums: [0, 0, 0],
				testNames: ['语义流畅性', '语音流畅性', '动作流畅性'],
				pos: 0, //当前符号，默认0
				isFinish: 0, //量表是否完成，默认0
			},
			computed: {
				notice: function() {
					if (this.status == 0) {
						return '注意：' + this.scaleMsg.aiQuestionNotice[0];
					} else if (this.status == 2) {
						return '注意：' + this.scaleMsg.aiQuestionNotice[1];
					} else return ''
				}
			},
			methods: {
				addNum: function(e) {
					event.stopPropagation()
					if (this.isFinish != 0)
						return
					if (e != this.status)
						return
					let a = this.trueNums[e];
					this.trueNums.splice(e, 1, ++a);
				},
				deleteNum: function(e) {
					event.stopPropagation()
					if (this.isFinish != 0)
						return
					if (e != this.status)
						return
					let a = this.trueNums[e];
					if (a - 1 < 0)
						return
					this.trueNums.splice(e, 1, --a);
				},
				toSelect: function(e) {
					if (this.isFinish != 0)
						return
					this.status = e;
				},
				finish: function() {
					alert('确定完成？')
					this.isFinish = 1;
				}
			}
		});

		//获取量表基本信息(首页)
		var scales = sstorage.getItem("scaleRest");
		console.log(scales, 'scales')
		if (scales)
			for (let i = 0; i < scales.items.length; i++) {
				if (scales.items[i].aiScaleId == 19) {
					scaleData.aiScaleId = scales.items[i].aiScaleId;
					scaleData.aiScaleName = scales.items[i].aiScaleName;
					let notice, overView;
					if (scales.items[i].aiScaleNotice)
						notice = scales.items[i].aiScaleNotice.split('&');
					if (scales.items[i].aiScaleOverview)
						overView = scales.items[i].aiScaleOverview.split('&');
					//scaleData.index.aiScaleNotice = (notice);
					scaleData.aiScaleOverview = (overView);
				}
			}

		function next_scale() {
			console.log(scales)
			if (vue.isFinish != 0) {
				let ind = -1;
				for (let i = 0; i < scales.items.length; i++) {
					if (scales.items[i].aiScaleId == 19)
						ind = i;
				}
				if (ind + 1 == scales.items.length) {
					window.location.href = 'finish.html'
				} else {
					toJump(scales.items[ind + 1].aiScaleId)
				}
				alert('可以跳转');
			} else {
				alert('您还有未完成的内容');
			}
		}
		console.log(scaleData, 'scaleData')
	</script>
</html>
