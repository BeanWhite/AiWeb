<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>神经心理辅助诊疗系统</title>
		<script src="config/userConfig.js"></script>
		<!-- 背景动画 以及初始化样式-->
		<link rel="stylesheet" type="text/css" href="../css/normalize.css" />
		<link rel="stylesheet" type="text/css" href="../css/demo.css">
		<link rel="stylesheet" href="../css/style.css">
		<script type="text/javascript" src="../js/vue.js"></script>
		<!-- 引入jQuery.js -->
		<script src="../js/jquery/jquery.min.js"></script>

		<!-- 引入element -->
		<script src="../element/element.js"></script>
		<link rel="stylesheet" type="text/css" href="../element/element.css" />
		<!-- <script type="text/javascript" src="../js/laydate.js"></script> -->
		<script src="config/urlConfig.js"></script>
		<script src="utils/Storage.js"></script>
		<style>
			html,body{
				padding: 0;
				margin: 0;
			}
			.border-bottom{
				width: 100%;
				border-bottom: 1px solid darkgray;
			}
			#content {
				width: 100vw;
				height: 100vh;
				display: flex;
				justify-content: center;
				align-items: center;
				position: relative;
			}
			.scale {
				position: relative;
				display: flex;
				justify-content: center;
				align-items: flex-start;
				/* width: 1764px;
				height: 820px; */
				width: 80%;
				height: 90%;
				background-color: rgba(255, 255, 255,1);
				border-color: rgb(255, 255, 255);
				border-width: 1px;
				border-style: solid;
				border-radius: 5px;
				font-size: 16px;
				opacity: 1;
				padding: 30px 30px 30px 30px;
			}
			.box{
				border: 1px solid black;padding: 20px;box-sizing: border-box;;
			}
			.border{
				border:1px solid #BBBBBB;border-radius: 5px;
			}
			.line_h{
				height: 50px;line-height: 50px;padding: 0;;margin:0;box-sizing: border-box;padding-left: 5px;text-align: center;display: inline-block;
			}
			.table-t1{
				 border-collapse:collapse;table-layout: fixed;
				word-wrap: break-word; word-break: break-all;width: 100%;border:none;
			}
			td{
				padding: 0;
			}
			.table-t1 td{border:1px solid #BBBBBB;text-align: center;height: 35px;line-height: 35px;}
			.table-t1 th{border:1px solid #BBBBBB;;text-align: center;height: 35px;line-height: 35px;background: rgba(16, 112, 193, 0.8);color: white;}
		</style>
	</head>
	<body>
		<!-- 背景图 -->
		<div class="satic-area">
			<div class="dynamic-area1"></div>
			<div class="dynamic-area2"></div>
		</div>
		<div id="content">
			<div class="scale" style="display: flex;flex-direction: column;padding-bottom: 0;">
				<div style="width: 100%;height: calc(100% - 30px);">
					<div class="box border" style="width: 30%;height: 100%;float: left;">
						<input v-model="dataModel.id" type="text" class="border line_h" placeholder="请输入患者ID号精确查询" style="width: 100%;">

						<input v-model="dataModel.name" type="text" name="" id="" class="border line_h" placeholder="请输入患者姓名模糊查询" style="width: 100%;margin-top: 10px;">
						<div class="" style="display: flex;justify-content: center;align-items: center;">
							<el-date-picker v-model="dataModel.t1" type="date" placeholder="开始时间" style="width: 45%;margin-top: 10px;"></el-date-picker>
							<label style="width: 10%;text-align: center;">到</label>
							<el-date-picker v-model="dataModel.t2" type="date" placeholder="开始时间" style="width: 45%;margin-top: 10px;"></el-date-picker>
						</div>
						<div style="margin-top: 20px;text-align:center;">
							<button @click="check()" style="border:none ;border-radius: 5px;background: rgb(49, 133, 187);color: white;padding:10px;margin-top: 20px;;width: 150px;">查询</button>
						</div>
					</div>
					<div class="box border" id="app" style="width: 65%;height: 100%;float: right;display: flex;flex-direction: column;align-items: center; overflow: overlay;">
						<table class="table-t1" style="margin-bottom: 10px;">
							<thead>
								<tr>
									<th style="width: 30%;border-top-left-radius: 5px;border-left: none;border-top: none;">测验时间</th>
									<th style="width: 15%;">患者ID号</th>
									<th style="width: 15%;">患者姓名</th>
									<th style="width: 30%;">测验名称</th>
									<th style="width: 10%;border-top-right-radius: 5px;border-right: none;border-top: none;">操作</th>
								</tr>
							</thead>
							<tbody>
								<!-- <tr v-for="it in item">
									<td>{{it["aiTestTime"]}}</td>
									<td>{{it["aiUserId"]}}</td>
									<td>{{it["aiUserName"]}}</td>
									<td>{{it["aiScaleName"]}}</td>
									<td @click="printPDF(it)">{{it["operation"]}}</td>
								</tr> -->
								<tr v-for="(it,ind) in listData">
									<td>
										{{it.startTime}}
									</td>
									<td>
										{{it.aiUserId}}
									</td>
									<td>
										{{it.aiUserName}}
									</td>
									<td>
										<div v-for="(i,index) in it.groupByStartTime" v-bind:class="index<it.groupByStartTime.length-1?'border-bottom':''">
											{{i.aiScaleName}}
										</div>
									</td>
									<td @click="printPDF(it)">
										查看
									</td>
								</tr>
							</tbody>
						</table>
						<el-pagination background layout="prev, pager, next" :page-size="pageSize" :current-page="currentPage" :total="total"
						 style="height: 100%;" @current-change="currentChange">
						</el-pagination>
					</div>
					<div style="clear: both;"></div>
				</div>
				<div class="scale-submit-content" style="display: flex;justify-content: flex-end;width: 100%;">
					<ul class="menue-icon-list" style="padding: 5px;">
						<li class="menue-icon-item bgc-red" @click="quit()"><img src="../svg/menue_icons/shutDown.svg"></li>
						<li class="menue-icon-item bgc-blue" @click="home()"><img src="../svg/menue_icons/home.svg"></li>
						<li class="menue-icon-item bgc-blue"><img src="../svg/menue_icons/edit.svg"></li>
						<li class="menue-icon-item bgc-blue"><img src="../svg/menue_icons/search.svg"></li>
						<li class="menue-icon-item bgc-blue"><img src="../svg/menue_icons/setting.svg"></li>
					</ul>
				</div>
			</div>

		</div>
	</body>
	<script>
		// let USER_ID = sstorage.getItem('logins');
		// if (USER_ID == null || USER_ID == undefined) {
		// 	location.href = '../index.html'
		// } else USER_ID = USER_ID.id
		let url = config.url + '/report'
		new Vue({
			el: '#content',
			data: {
				item: [],
				currentPage: 1,
				pageSize: 20,
				dataModel: {
					time1: "",
					time2: "",
					t1: "",
					t2: "",
					id: "",
					name: "",
					currentPage: "",
					pageSize: ""
				},
				total: 0,
				listData: [],
				printData: [] //待打印的列表
			},
			created() {
				let that = this;

				$.ajax({
					url: url + '/report/group/start/' + this.currentPage + '/' + this.pageSize,
					type: 'GET',
					success: function(e) {
						that.total = e.o;
						that.listData = e.object;
						console.log('分页内容', e)
					}
				})
				// $.ajax({
				// 	//初始化默认表格数据
				// 	url: url + '/msg',
				// 	type: 'GET',
				// 	success: function(e) {
				// 		let o = e.object;
				// 		for (let i = 0; i < o.length; i++) {
				// 			let b = o[i];
				// 			b.operation = '查看';
				// 			that.item.push(b);
				// 		}
				// 		console.log(e)
				// 	},
				// 	error: function() {

				// 	}
				// })
			},
			computed: {},
			watchs: {

			},
			methods: {
				quit(){
					sstorage.removeItem('logins');
					location.reload()
				},
				home(){
					location.href = 'menue.html'
				},
				currentChange(e) {
					console.log('页码改变', e)
					this.currentPage = e;
					let that = this;
					$.ajax({
						url: url + '/report/group/start/' + this.currentPage + '/' + this.pageSize,
						type: 'GET',
						success: function(e) {
							that.total = e.o;
							that.listData = e.object;
							console.log('分页内容', e)
						}
					})
				},
				check(e) {
					/**
					 * 开始查询
					 */
					//console.log(this.dataModel)

					let that = this;
					this.listData.splice(0);
					let a = this.dataModel.id.replace(/(^\s*)|(\s*$)/g, "");
					let b = this.dataModel.name.replace(/(^\s*)|(\s*$)/g, "");
					let c = this.dataModel.time1
					let d = this.dataModel.time2
					this.dataModel.currentPage = this.currentPage;
					this.dataModel.pageSize = this.pageSize;

					console.log(this.dataModel)

					if (a == "" && b == "" && c == null && d == null) {
						$.ajax({
							//初始化默认表格数据
							url: url + '/report/group/start/' + this.currentPage + '/' + this.pageSize,
							type: 'GET',
							success: function(e) {
								for (let i = 0; i < o.length; i++) {
									that.total = e.o;
									that.listData = e.object;

								}
								console.log(e)
							},
							error: function() {

							}
						})
					} else {
						if (this.dataModel.t1 != null || this.dataModel.t1 != undefined)
							this.dataModel.time1 = this.dataModel.t1.toLocaleString('chinese', {
								hour12: false
							}).replace(/\//g, "-");
						if (this.dataModel.t2 != null || this.dataModel.t2 != undefined)
							this.dataModel.time2 = this.dataModel.t2.toLocaleString('chinese', {
								hour12: false
							}).replace(/\//g, "-");
						$.ajax({
							//按照用户id查询报告
							url: url + '/report/groups/' + JSON.stringify(this.dataModel),
							type: 'GET',
							success: function(e) {
								let o = e.object;
								for (let i = 0; i < o.length; i++) {
									that.total = e.o;
									that.listData = e.object;
								}
								console.log(e)
							},
							error: function() {

							}
						})
					}
				},
				/**	单项打印
				 * @param {Object} e
				 */
				printPDF: function(e) {
					console.log(e)
					this.printData.splice(0);
					for (let i = 0; i < e.groupByStartTime.length; i++) {
						let o = {
							aiUserId: e.aiUserId,
							aiTestTime: e.aiTestTime,
							aiScaleName: e.groupByStartTime[i].aiScaleName
						};
						this.printData.push(o)
					}

					console.log(this.printData)

					window.open('../html/report/report.html?' + JSON.stringify(this.printData));
					let that = this;
					setTimeout(() => {
						that.printData.splice(0)
					})
				},
				/**
				 * 多项打印
				 */
				printPDFs() {
					window.open('../html/report/report.html?' + JSON.stringify(this.printData))
				}
			}
		})
	</script>
</html>
