<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>神经心理辅助诊疗系统</title>
		<script src="config/userConfig.js"></script>
		<!-- 背景动画 以及初始化样式-->
		<link rel="stylesheet" type="text/css" href="../css/normalize.css" />
		<link rel="stylesheet" type="text/css" href="../css/demo.css">
		<link rel="stylesheet" href="../css/style.css">
		<link rel="stylesheet" type="text/css" href="../css/doc.css" />
		<!-- 导入vue.js -->
		<script src="../js/vue.js"></script>
		<script type="text/javascript" src="./config/urlConfig.js"></script>
		<!-- 引入jQuery.js -->
		<script src="../js/jquery/jquery.min.js"></script>
		<script src="../js/toJump.js"></script>
		
	</head>
	<style>
		.off{
			display: none;
		}
		div{
			white-space: nowrap;
		}
		select{
			width: 100%;
			height: 100%;
			border: none;
		}
		select:focus{
			outline: none;
		}
	</style>
	<body>

		<!-- 背景图 -->
		<div class="satic-area">
			<div class="dynamic-area1"></div>
			<div class="dynamic-area2"></div>
		</div>
		<div id="content" class="print-link no-print">
			<!-- 模块菜单 -->
			<div class="doc-pane" style="display: none;">
				<span>量表评估模块</span>

				<span>测验评估模块</span>

				<span>查询/打印报告</span>
			</div>
			<!-- 量表评估模块 -->
			<div class="scale" id="ind">
				<div class="scale-change scale-title">
					<img src="../svg/change.svg" />
					<p>切换自评模块</p>
				</div>
				<div class="scale-submit-box">
					<div class="scale-submit-content">
						<ul class="menue-icon-list" style="visibility: hidden;">
							<li class="menue-icon-item bgc-red"><img src="../svg/menue_icons/shutDown.svg"></li>
							<li class="menue-icon-item bgc-blue"><img src="../svg/menue_icons/home.svg"></li>
							<li class="menue-icon-item bgc-blue"><img src="../svg/menue_icons/edit.svg"></li>
							<li class="menue-icon-item bgc-blue"><img src="../svg/menue_icons/search.svg"></li>
							<li class="menue-icon-item bgc-blue"><img src="../svg/menue_icons/setting.svg"></li>
						</ul>
						<div class="scale-submit" onclick="issueTest()">
							发布测评
						</div>
						<ul class="menue-icon-list">
							<li class="menue-icon-item bgc-red" @click="quit()"><img src="../svg/menue_icons/shutDown.svg"></li>
							<li class="menue-icon-item bgc-blue" @click="home()"><img src="../svg/menue_icons/home.svg"></li>
							<li class="menue-icon-item bgc-blue"><img src="../svg/menue_icons/edit.svg"></li>
							<li class="menue-icon-item bgc-blue"><img src="../svg/menue_icons/search.svg"></li>
							<li class="menue-icon-item bgc-blue"><img src="../svg/menue_icons/setting.svg"></li>
						</ul>
					</div>

				</div>
				<div class="scale-left">
					<span class="scale-title"><img src="../svg/table.svg" />
						<p>选择测评量表</p>
					</span>

					<div class="scale-list">
						<input type="search" class="search" id="search" oninput="inputsearch()" onfocus="inputsearch()" />
						<!-- <div class="scale-list-box scrollbar"> -->
						<ul id="scale-add" style="padding: none;">
							<li v-for="(it,index) in scale_list.items" :key="it.aiScaleId" v-on:click="greet(it)">{{it.aiScaleName}}&nbsp;<img src="../svg/add.svg"
								 style=""></li>
						</ul>
						<!-- </div> -->
					</div>
				</div>
				<div class="scale-right">
					<span class="scale-title"><img src="../svg/user.svg" />
						<p>
							选择测评对象
						</p>
					</span>

					<div class="scale-right-select">
						<input type="search" id="searchUser" oninput="searchUser()"  />

					</div>
					<span class="scale-title"><img src="../svg/msg.svg" />
						<p>基础信息</p>
					</span>

					<div class="scale-right-basMsg">
						<div class="off">
							<input type="" name="" id="userId" value="" />
						</div>
						<div class="scale-right-basMsg-div">
							<div class="ce">
								<img src="../svg/msg_icons/user-red.svg" />
								<span>姓名：</span></div>
								<input type="" name="" id="userName" value="" maxlength="10"/>
						</div>
						<div class="scale-right-basMsg-div">
							<div class="ce">
								<img src="../svg/msg_icons/sex.svg" />
								性别：</div>
								<input class="off" type="" name="" id="userSex" value="" />
								<select name="" id="userSex_c">
									<option :style="{display:(msg.aiUserSex?'':'none')}" :value="msg.aiUserSex">{{msg.aiUserSex}}</option>
									<option value="男">男</option>
									<option value="女">女</option>
								</select>
						</div>
						<div class="scale-right-basMsg-div">
							<div class="ce">
								<img src="../svg/msg_icons/age.svg" >
								年龄：</div><input  type="text" name="" id="userAge" value=""  maxlength="3"/>
						</div>
						<div class="scale-right-basMsg-div">
							<div class="ce">
								<img src="../svg/msg_icons/edu.svg" >
								学历：</div><input class="off" type="" name="" id="userEdu" value="" />
								<select name="" id="userEdu_c">
									<option :class="[msg.aiUserEduBg?'':'off']" :value="msg.aiUserEduBg">{{msg.aiUserEduBg}}</option>
									<option value="小学">小学</option>
									<option value="初中">初中</option>
									<option value="高中/职中">高中/职中</option>
									<option value="大专">大专</option>
									<option value="本科">本科</option>
									<option value="硕士">硕士</option>
									<option value="博士">博士</option>
								</select>
						</div>
						<div class="scale-right-basMsg-div">
							<div class="ce">
								<img src="../svg/msg_icons/heart.svg" >
								婚姻：</div><input class="off" type="" name="" id="userMarr" value="" />
								<select name="" id="userMarr_c">
									<option :class="[msg.aiUserMarriage?'':'off']" :value="msg.aiUserMarriage">{{msg.aiUserMarriage}}</option>
									<option value="已婚">已婚</option>
									<option value="未婚">未婚</option>
									<option value="离异">离异</option>
									<option value="保密">保密</option>
								</select>
						</div>
						<div class="scale-right-basMsg-div">
							<div class="ce">
								<img src="../svg/msg_icons/job.svg" />
								职业：</div>
								<input class="off" type="" name="" id="userPro" value="" />
								<select name="" id="userPro_c">
									<option :class="[msg.aiUserProfession?'':'off']" :value="msg.aiUserProfession">{{msg.aiUserProfession}}</option>
									<option value="计算机">计算机</option>
									<option value="互联网">互联网</option>
									<option value="通讯">通讯</option>
									<option value="生产/工艺/制造">生产/工艺/制造</option>
									<option value="医护/护理/制药">医护/护理/制药</option>
									<option value="金融/银行/投资">金融/银行/投资</option>
									<option value="保险">保险</option>
									<option value="商业/服务行">商业/服务行</option>
									<option value="文化/广告/传媒">文化/广告/传媒</option>
									<option value="娱乐/艺术/表演">娱乐/艺术/表演</option>
									<option value="律师/法务">律师/法务</option>
									<option value="教育/培训">教育/培训</option>
									<option value="公务员/事业单位">公务员/事业单位</option>
									<option value="模特">模特</option>
									<option value="空姐">空姐</option>
									<option value="学生">学生</option>
									<option value="其它">其它</option>
								</select>
						</div>
						<div class="scale-right-basMsg-div">
							<div class="ce">
								<img src="../svg/msg_icons/office.svg" >
								科室：</div><input type="" name="" id="userOffice" value=""  maxlength="15"/>
						</div>
						<div class="scale-right-basMsg-div">
							<div class="ce">
								<img src="../svg/msg_icons/from.svg" >
								来源：
							</div>	
								<input  class="off" type="" name="" id="userFrom" value="" />
								<select name="" id="userFrom_c">
									<option :class="[msg.aiUserFrom?'':'off']" :value="msg.aiUserFrom">{{msg.aiUserFrom}}</option>
									<option value="门诊">门诊</option>
									<option value="住院">住院</option>
									<option value="其它">其它</option>
								</select>
						</div>
					</div>
					<span class="scale-title"><img src="../svg/re.svg" />
						<p> 选择量表</p>
					</span>

					<div class="scale-result">
						<ul id="scale-result-list">
							<li v-for="it in scale_result_list.items" :key="it.aiScaleId" v-on:click="greet1(it)">{{it.aiScaleName}}&nbsp;<img src="../svg/delete.svg" /></li>
						</ul>
					</div>
				</div>
			</div>
		</div>

	</body>
	<script src="utils/Storage.js"></script>
	<script>
		//let USER_ID = window.location.search.split('?')[1].split(0, 1).join("");
		console.log(USER_ID);
		let isUser = false; //定义该账户是否存在于数据库中,true表示存在，false表示不存在
		let userData = null; //存放从数据库获取到的用户原始信息
		$(document).ready(function() {
			$.ajax({
				type: 'GET',
				url: config.url + '/scales/all',
				success: function(data) {
					//alert(data.object)
					console.log(data.object)
					scale.items = data.object.slice(0, data.object.length);
					scale_list.items = data.object.slice(0, data.object.length);
					scale_rest.items = data.object.slice(0, data.object.length);
				},
				error: function(data) {
					console.log('连接失败')
				}
			})
		});

		//量表合集
		var scale = {
			items: []
		};
		//被选中的量表
		var scale_result_list = {
			items: []
		};
		//搜索出来的量表
		var scale_search_list = {
			items: []
		};
		//显示的量表
		var scale_list = {
			items: []
		};
		//未被选中的量表
		var scale_rest = {
			items: []
		};

		/**
		 * 选择结果量表
		 */
		// new Vue({
		// 	el: '#scale-result-list',
		// 	data: scale_result_list,
		// 	methods: {
				
		// 	}
		// });


		/**
		 * 所有显示的量表
		 */
		let vue = new Vue({
			el: '#content',
			data: {
				scale_list,
				scale_result_list,
				msg:{
					aiUserId:'',
					aiUserName:'',
					aiUserSex:'',
					aiUserAge:'',
					aiUserEduBg:'',
					aiUserMarriage:'',
					aiUserProfession:'',
					aiUserOffice:'',
					aiUserFrom:''
				}
			},
			methods: {
				home() {
					location.href = 'menue.html'
				},
				quit() {
					sstorage.removeItem('logins')
					location.reload()
				},
				greet1: function(it) {
					console.log(it)
					let o = {};
					o.aiScaleName = it.aiScaleName;
					o.aiScaleId = it.aiScaleId;
					o.aiScaleOverview = it.aiScaleOverview;
					scale_rest.items.push(o);
					scale_list.items.push(o);
					for (let i = 0; i < scale_result_list.items.length; i++) {
						if (it.aiScaleId == scale_result_list.items[i].aiScaleId) {
							scale_result_list.items.splice(i, 1)
							break
						}
					}
				},
				greet: function(it) {
					let o = {};
					o.aiScaleName = it.aiScaleName;
					o.aiScaleId = it.aiScaleId;
					o.aiScaleOverview = it.aiScaleOverview;
					o.aiScaleNotice = it.aiScaleNotice;
					scale_result_list.items.push(o);
					for (let i = 0; i < scale_rest.items.length; i++) {
						if (it.aiScaleId == scale_rest.items[i].aiScaleId) {
							scale_rest.items.splice(i, 1);
							break;
						}
					}
					for (let i = 0; i < scale_list.items.length; i++) {
						if (it.aiScaleId == scale_list.items[i].aiScaleId) {
							scale_list.items.splice(i, 1);
							break;
						}
					}

				}
			}
		});
		/**
		 * 搜索结果量表
		 */
		function inputsearch() {
			let a = $('#search').val().replace(/\s*/g, "");
			if (a == "") {
				scale_list.items = scale_rest.items.slice(0, scale_rest.items.length);
				return
			}
			let kw = new RegExp(a, 'i');
			let arr = []
			for (let i = 0; i < scale_rest.items.length; i++) {
				if (kw.test(scale_rest.items[i].aiScaleName)) {
					arr.push(scale_rest.items[i]);
				}
			}
			scale_list.items = arr;
		}
		/**
		 * 搜索用户
		 */
		function searchUser() {

			let a = $('#searchUser').val().replace(/\s*/g, "");
			if (a == "") {
				$('#userId').val("");
				$('#userName').val("");
				$('#userAge').val("");
				$('#userOffice').val("");
				$('#userSex').val("");
				$('#userPro').val("");
				$('#userFrom').val("");
				$('#userEdu').val("");
				$('#userMarr').val("");
				for(let i in vue.msg){
					vue.msg[i] = ' '
				}
				return
			} else {
				$.ajax({
					type: 'GET',
					url: config.url + '/users/msgForDoc/' + a,
					success: function(e) {
						console.log(e)
						var data = e.object;
						if (data) {
							userData = data;
							isUser = true;
							$('#userId').val(data.aiUserId);
							$('#userName').val(data.aiUserName);
							$('#userAge').val(data.aiUserAge);
							$('#userOffice').val(data.aiUserOffice);
							$('#userSex').val(data.aiUserSex);
							var p = data.aiUserProfession;
							p = p.replace(/,/g,'/')
							$('#userPro').val(p);
							$('#userFrom').val(data.aiUserFrom);
							p = data.aiUserEduBg;
							p = p.replace(',','/')
							$('#userEdu').val(p);
							$('#userMarr').val(data.aiUserMarriage);
							for(i in data){
								vue.msg[i] = data[i];
							}
							vue.msg.aiUserProfession = p;
							vue.msg.aiUserEduBg = $('#userEdu').val()
							//将用户信息存入session中
							console.log(data)
							sstorage.setItem("userMsg", data);
						} else {
							isUser = false;
							userData = null;
							$('#userId').val("");
							$('#userName').val("");
							$('#userAge').val("");
							$('#userOffice').val("");
							$('#userSex').val("");
							$('#userPro').val("");
							$('#userFrom').val("");
							$('#userEdu').val("");
							$('#userMarr').val("");
							for(let i in vue.msg)
							vue.msg[i] = ''
						}
					},
					error: function(e) {
						console.log('连接出错')
					}
				})
			}
		}
		/**
		 * 发布测评
		 */
		function issueTest() {
			let a = $('#searchUser').val().replace(/\s*/g, "");
			if (scale_result_list.items.length == 0) {
				alert("没有选中的测评哦");
			} else if (a == "") {
				alert("请选择测评对象");
			} else if (
				a == "" ||
				$('#userName').val().replace(/\s*/g, "") == "" ||
				$('#userAge').val().replace(/\s*/g, "") == "" ||
				$('#userOffice').val().replace(/\s*/g, "") == "" ||
				$('#userSex_c').val().replace(/\s*/g, "") == "" ||
				$('#userPro_c').val().replace(/\s*/g, "") == "" ||
				$('#userFrom_c').val().replace(/\s*/g, "") == "" ||
				$('#userEdu_c').val().replace(/\s*/g, "") == "" ||
				$('#userMarr_c').val().replace(/\s*/g, "") == ""
			) {
				alert("请填写完基础信息");
			} else {
				$.ajax({
					url: config.url + '/report/redis0/' + USER_ID,
					async: false,
					type: 'DELETE',
					success: function(e) {
						console.log(e)
					}
				})
				//本地存放所有未做的量表，初始为所有量表(发布测评中的量表)
				let date = new Date().toLocaleString('chinese', {
					hour12: false
				});
				date = date.replace(/\//g, '-');
				sstorage.setItem('date', date);
				sstorage.setItem("scale", scale_result_list);
				sstorage.setItem("scaleRest", scale_result_list)
				//保存选中的用户信息
				/**
				 * 需要与之前的信息进行比较，如有变为修改数据库 
				 */
				let o = {};
				o.aiUserId = $('#searchUser').val().replace(/\s*/g, "");
				o.aiUserName = $('#userName').val();
				o.aiUserAge = $('#userAge').val();
				o.aiUserOffice = $('#userOffice').val();
				o.aiUserProfession = $('#userPro_c').val().replace(/\//g,',');
				o.aiUserFrom =$('#userFrom_c').val();
				o.aiUserEduBg =$('#userEdu_c').val().replace(/\//g,',');
				o.aiUserMarriage =$('#userMarr_c').val();
				o.aiUserSex = $('#userSex_c').val();
				//将用户信息存入session中
				let boo = false;
				if (isUser == true) {
					for (i in o) {
						if (userData[i] != o[i]) {
							boo = true;
							break;
						}
						console.log('???')
					}
				} else {
					boo = true;
				}
				console.log(o, '***')
				
				if (boo) {
					let ind = 0;
					if (isUser)
						ind = 1;
					console.log('提交')
					$.ajax({
						type: 'POST',
						async: false,
						url: config.url + '/users/userW/' + JSON.stringify(o) + '/' + ind,
						data:{
							valeu:JSON.stringify(o)
						},
						success: function(e) {
							console.log(e)

							sstorage.setItem("userMsg", o);
							//将测评量表发送至用户
							var obj = {
								//target: $('#userId').val(),
								target:$('#searchUser').val().replace(/\s*/g, ""),
								from_who: USER_ID,
								data: scale_result_list.items,
								isCache: true, //将信息发送至服务器缓存
								status: 5,
								dataType: "scale",
								dataName: '量表信息'
							};
							//量表信息发送给用户
							sendMSG(obj);
							console.log(scale_result_list.items[0].aiScaleId)

							//按选择量表顺序第一个跳转跳转页面
							toJump(scale_result_list.items[0].aiScaleId);

						}
					})
				} else {
					console.log(o)
					sstorage.setItem("userMsg", o);
					//将测评量表发送至用户
					var obj = {
						//target: $('#userId').val(),
						target:$('#searchUser').val().replace(/\s*/g, ""),
						from_who: USER_ID,
						data: scale_result_list.items,
						isCache: true, //将信息发送至服务器缓存
						status: 5,
						dataType: "scale",
						dataName: '量表信息'
					};
					//量表信息发送给用户
					sendMSG(obj);
					console.log(scale_result_list.items[0].aiScaleId)

					//按选择量表顺序第一个跳转跳转页面
					toJump(scale_result_list.items[0].aiScaleId);

				}


				//window.location.href  = "iframe/scales.html?"+USER_ID;
				//需要根据scale_result_list转到相应的页面
				//window.location.href = "doc_ligature.html?"+USER_ID;

			}
		}

		var ws = new WebSocket(config.wsURL + '/websocket/' + USER_ID);
		ws.onopen = function(e) {
			console.log('连接成功');
		}

		ws.onmessage = function(e) {
			console.log('有消息推送');
		}
		ws.onerror = function(e) {
			console.log('连接出错');
		}
		ws.onclose = function(e) {
			console.log('连接关闭');
		}

		function sendMSG(msg) {
			ws.send(JSON.stringify(msg));
		}
		window.onbeforeunload = function() {
			ws.close();
		}
	</script>
</html>
